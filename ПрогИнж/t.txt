Пролог: списки и структуры

Cписки - упорядоченные множества элементов
Пример. [[serg, kat], [victor, alex]] 
Расщепление списков - расщепление на голову (первый элемент списка) и хвост (оставшиеся элементы списка)
Пример. [X|Y]
Шаблоны списков - на их основе можно создавать общие правила для списков
[X|Y] - состоит не менее чем из одного элемента.
[b|Z] - первый элемент b.
[Y,X,Z] - список из трех элементов.
Встроенные предикаты не нужно явно включать в базу знаний.
length(L, N)
member(X, L) 
append(L1, L2, L3) 
last(X, L) 
reverse(L1, L2) 
Новые операторы
Оператор имеет можно определить директивой:
:- op( 600, xfx, имеет) 
используем "имеет" в качестве оператора с приоритетом 600 и типом 'xfx', 
Форма спецификатора 'xfx' указывает на то, что оператор, обозначенный через 'f', 
располагается между аргументами, обозначенными через 'х'
Три группы типов операторов 
инфиксные xfx xfy yfx
префиксные fx fy
постфиксные хf yf
Многоуровневые объекты
author = author (name, surname).
article= book (title, author).
title, name, surname=symbol
Рекурсия
сложный объект является составной частью другого сложного объекта (рекурсивные объекты)
noun = noun (word).
База данных 
Пример.
семья( членсемьи( том, фокс, дата( 7, май, 1950),
работает( bbс, 15200) ),
членсемьи( энн, фокс, дата( 9, май, 1951), неработает),
[членсемьи( пат, фокс, дата( 5, май, 1973), неработает),
членсемьи( джим, фокс, дата( 5, май, 1973), неработает) ] ).
Структуры состоят из нескольких компонент.
Можно задавать структуру интересующих нас объектов и оставлять конкретные компоненты без точного описания или лишь с частичным описанием


